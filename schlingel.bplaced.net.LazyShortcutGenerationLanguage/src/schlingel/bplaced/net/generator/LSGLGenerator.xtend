/*
 * generated by Xtext
 */
package schlingel.bplaced.net.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.IGenerator
import org.eclipse.xtext.generator.IFileSystemAccess
import schlingel.bplaced.net.generator.model.LSGLModelGenerator
import schlingel.bplaced.net.generator.views.LSGLViewElementsGenerator

/**
 * Generates code from your model files on save.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#TutorialCodeGeneration
 */
class LSGLGenerator implements IGenerator {
	
	override void doGenerate(Resource resource, IFileSystemAccess fsa) {
		val entityGenerator = new LSGLModelGenerator()
		val viewGenerator = new LSGLViewElementsGenerator()
		entityGenerator.doGenerate(resource, fsa)
		viewGenerator.doGenerate(resource, fsa)
		
//		fsa.generateFile('greetings.txt', 'People to greet: ' + 
//			resource.allContents
//				.filter(typeof(Greeting))
//				.map[name]
//				.join(', '))
	}
}
