/*
* generated by Xtext
*/
grammar InternalLSGL;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package schlingel.bplaced.net.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package schlingel.bplaced.net.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import schlingel.bplaced.net.services.LSGLGrammarAccess;

}

@parser::members {

 	private LSGLGrammarAccess grammarAccess;
 	
    public InternalLSGLParser(TokenStream input, LSGLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected LSGLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getGeneratorsGeneratorParserRuleCall_0_0()); 
	    }
		lv_generators_0_0=ruleGenerator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"generators",
        		lv_generators_0_0, 
        		"Generator");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getTypesTypeParserRuleCall_1_0()); 
	    }
		lv_types_1_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"types",
        		lv_types_1_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getProjectionsProjectionParserRuleCall_2_0()); 
	    }
		lv_projections_2_0=ruleProjection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"projections",
        		lv_projections_2_0, 
        		"Projection");
	        afterParserOrEnumRuleCall();
	    }

)
))*
;





// Entry rule entryRuleGenerator
entryRuleGenerator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGeneratorRule()); }
	 iv_ruleGenerator=ruleGenerator 
	 { $current=$iv_ruleGenerator.current; } 
	 EOF 
;

// Rule Generator
ruleGenerator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='def' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getGeneratorAccess().getDefKeyword_0());
    }
	otherlv_1='generator' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getGeneratorAccess().getGeneratorKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getGeneratorAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGeneratorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getGeneratorAccess().getPropertiesConfigPropertyParserRuleCall_3_0()); 
	    }
		lv_properties_3_0=ruleConfigProperty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGeneratorRule());
	        }
       		add(
       			$current, 
       			"properties",
        		lv_properties_3_0, 
        		"ConfigProperty");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getGeneratorAccess().getConfigsConfigParserRuleCall_4_0()); 
	    }
		lv_configs_4_0=ruleConfig		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGeneratorRule());
	        }
       		add(
       			$current, 
       			"configs",
        		lv_configs_4_0, 
        		"Config");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='end' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getGeneratorAccess().getEndKeyword_5());
    }
)
;





// Entry rule entryRuleConfig
entryRuleConfig returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConfigRule()); }
	 iv_ruleConfig=ruleConfig 
	 { $current=$iv_ruleConfig.current; } 
	 EOF 
;

// Rule Config
ruleConfig returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='def' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getConfigAccess().getDefKeyword_0());
    }
	otherlv_1='config' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getConfigAccess().getConfigKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getConfigAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConfigRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getConfigAccess().getPropertiesConfigPropertyParserRuleCall_3_0()); 
	    }
		lv_properties_3_0=ruleConfigProperty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConfigRule());
	        }
       		add(
       			$current, 
       			"properties",
        		lv_properties_3_0, 
        		"ConfigProperty");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getConfigAccess().getCommaKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConfigAccess().getPropertiesConfigPropertyParserRuleCall_4_1_0()); 
	    }
		lv_properties_5_0=ruleConfigProperty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConfigRule());
	        }
       		add(
       			$current, 
       			"properties",
        		lv_properties_5_0, 
        		"ConfigProperty");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6='end' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getConfigAccess().getEndKeyword_5());
    }
)
;





// Entry rule entryRuleConfigProperty
entryRuleConfigProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConfigPropertyRule()); }
	 iv_ruleConfigProperty=ruleConfigProperty 
	 { $current=$iv_ruleConfigProperty.current; } 
	 EOF 
;

// Rule ConfigProperty
ruleConfigProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getConfigPropertyAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConfigPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getConfigPropertyAccess().getColonKeyword_1());
    }
(
(
		lv_value_2_0=RULE_STRING
		{
			newLeafNode(lv_value_2_0, grammarAccess.getConfigPropertyAccess().getValueSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConfigPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleType
entryRuleType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	 iv_ruleType=ruleType 
	 { $current=$iv_ruleType.current; } 
	 EOF 
;

// Rule Type
ruleType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTypeAccess().getTypeAction_0_0(),
            $current);
    }
)
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getPrimaryTypeParserRuleCall_0_1()); 
    }
rulePrimaryType
    { 
        afterParserOrEnumRuleCall();
    }
)
    |
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getEnumParserRuleCall_1()); 
    }
    this_Enum_2=ruleEnum
    { 
        $current = $this_Enum_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getEntityParserRuleCall_2()); 
    }
    this_Entity_3=ruleEntity
    { 
        $current = $this_Entity_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulePrimaryType
entryRulePrimaryType returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrimaryTypeRule()); } 
	 iv_rulePrimaryType=rulePrimaryType 
	 { $current=$iv_rulePrimaryType.current.getText(); }  
	 EOF 
;

// Rule PrimaryType
rulePrimaryType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='string' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPrimaryTypeAccess().getStringKeyword_0()); 
    }

    |
	kw='int' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPrimaryTypeAccess().getIntKeyword_1()); 
    }

    |
	kw='double' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPrimaryTypeAccess().getDoubleKeyword_2()); 
    }

    |
	kw='float' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPrimaryTypeAccess().getFloatKeyword_3()); 
    }

    |
	kw='char' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPrimaryTypeAccess().getCharKeyword_4()); 
    }
)
    ;





// Entry rule entryRuleEnum
entryRuleEnum returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumRule()); }
	 iv_ruleEnum=ruleEnum 
	 { $current=$iv_ruleEnum.current; } 
	 EOF 
;

// Rule Enum
ruleEnum returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='def' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEnumAccess().getDefKeyword_0());
    }
	otherlv_1='enum' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEnumAccess().getEnumKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getEnumAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumAccess().getItemsEnumItemParserRuleCall_3_0()); 
	    }
		lv_items_3_0=ruleEnumItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumRule());
	        }
       		add(
       			$current, 
       			"items",
        		lv_items_3_0, 
        		"EnumItem");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEnumAccess().getCommaKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumAccess().getItemsEnumItemParserRuleCall_4_1_0()); 
	    }
		lv_items_5_0=ruleEnumItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumRule());
	        }
       		add(
       			$current, 
       			"items",
        		lv_items_5_0, 
        		"EnumItem");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6='end' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getEnumAccess().getEndKeyword_5());
    }
)
;





// Entry rule entryRuleEnumItem
entryRuleEnumItem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumItemRule()); }
	 iv_ruleEnumItem=ruleEnumItem 
	 { $current=$iv_ruleEnumItem.current; } 
	 EOF 
;

// Rule EnumItem
ruleEnumItem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getEnumItemAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumItemRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEnumItemAccess().getColonKeyword_1());
    }
(
(
		lv_value_2_0=RULE_STRING
		{
			newLeafNode(lv_value_2_0, grammarAccess.getEnumItemAccess().getValueSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumItemRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleEntity
entryRuleEntity returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEntityRule()); }
	 iv_ruleEntity=ruleEntity 
	 { $current=$iv_ruleEntity.current; } 
	 EOF 
;

// Rule Entity
ruleEntity returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='@generator' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEntityAccess().getGeneratorKeyword_0_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEntityAccess().getLeftParenthesisKeyword_0_1());
    }
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getEntityAccess().getGeneratorsGeneratorParserRuleCall_0_2_0_0()); 
	    }
		lv_generators_2_1=ruleGenerator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEntityRule());
	        }
       		add(
       			$current, 
       			"generators",
        		lv_generators_2_1, 
        		"Generator");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getEntityAccess().getGeneratorsQualifiedNameParserRuleCall_0_2_0_1()); 
	    }
		lv_generators_2_2=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEntityRule());
	        }
       		add(
       			$current, 
       			"generators",
        		lv_generators_2_2, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getEntityAccess().getRightParenthesisKeyword_0_3());
    }
)*	otherlv_4='def' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEntityAccess().getDefKeyword_1());
    }
	otherlv_5='entity' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getEntityAccess().getEntityKeyword_2());
    }
(
(
		lv_name_6_0=RULE_ID
		{
			newLeafNode(lv_name_6_0, grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEntityRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_6_0, 
        		"ID");
	    }

)
)(	otherlv_7='extends' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getEntityAccess().getExtendsKeyword_4_0());
    }
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getEntityAccess().getSuperClassEntityParserRuleCall_4_1_0_0()); 
	    }
		lv_superClass_8_1=ruleEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEntityRule());
	        }
       		set(
       			$current, 
       			"superClass",
        		lv_superClass_8_1, 
        		"Entity");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getEntityAccess().getSuperClassQualifiedNameParserRuleCall_4_1_0_1()); 
	    }
		lv_superClass_8_2=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEntityRule());
	        }
       		set(
       			$current, 
       			"superClass",
        		lv_superClass_8_2, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getEntityAccess().getAttributesAttributeParserRuleCall_5_0()); 
	    }
		lv_attributes_9_0=ruleAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEntityRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_9_0, 
        		"Attribute");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_10=',' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getEntityAccess().getCommaKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEntityAccess().getAttributesAttributeParserRuleCall_6_1_0()); 
	    }
		lv_attributes_11_0=ruleAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEntityRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_11_0, 
        		"Attribute");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_12='end' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getEntityAccess().getEndKeyword_7());
    }
)
;





// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	 iv_ruleAttribute=ruleAttribute 
	 { $current=$iv_ruleAttribute.current; } 
	 EOF 
;

// Rule Attribute
ruleAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='@annotation' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAttributeAccess().getAnnotationKeyword_0_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAttributeAccess().getLeftParenthesisKeyword_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeAccess().getAnnotationsAnnotationParserRuleCall_0_2_0()); 
	    }
		lv_annotations_2_0=ruleAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeRule());
	        }
       		add(
       			$current, 
       			"annotations",
        		lv_annotations_2_0, 
        		"Annotation");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAttributeAccess().getRightParenthesisKeyword_0_3());
    }
)*(
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeAccess().getTypeTypeParserRuleCall_1_0_0()); 
	    }
		lv_type_4_1=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_4_1, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getAttributeAccess().getTypeQualifiedNameParserRuleCall_1_0_1()); 
	    }
		lv_type_4_2=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_4_2, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)

)
)(
(
		lv_name_5_0=RULE_ID
		{
			newLeafNode(lv_name_5_0, grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_5_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleAnnotation
entryRuleAnnotation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnnotationRule()); }
	 iv_ruleAnnotation=ruleAnnotation 
	 { $current=$iv_ruleAnnotation.current; } 
	 EOF 
;

// Rule Annotation
ruleAnnotation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_STRING
		{
			newLeafNode(lv_name_0_0, grammarAccess.getAnnotationAccess().getNameSTRINGTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAnnotationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"STRING");
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAnnotationAccess().getCommaKeyword_1_0());
    }
(
(
		lv_value_2_0=RULE_STRING
		{
			newLeafNode(lv_value_2_0, grammarAccess.getAnnotationAccess().getValueSTRINGTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAnnotationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"STRING");
	    }

)
))?)
;





// Entry rule entryRuleProjection
entryRuleProjection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProjectionRule()); }
	 iv_ruleProjection=ruleProjection 
	 { $current=$iv_ruleProjection.current; } 
	 EOF 
;

// Rule Projection
ruleProjection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='@generator' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getProjectionAccess().getGeneratorKeyword_0_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getProjectionAccess().getLeftParenthesisKeyword_0_1());
    }
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getProjectionAccess().getGeneratorsGeneratorParserRuleCall_0_2_0_0()); 
	    }
		lv_generators_2_1=ruleGenerator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProjectionRule());
	        }
       		add(
       			$current, 
       			"generators",
        		lv_generators_2_1, 
        		"Generator");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getProjectionAccess().getGeneratorsQualifiedNameParserRuleCall_0_2_0_1()); 
	    }
		lv_generators_2_2=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProjectionRule());
	        }
       		add(
       			$current, 
       			"generators",
        		lv_generators_2_2, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getProjectionAccess().getRightParenthesisKeyword_0_3());
    }
)*	otherlv_4='def' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getProjectionAccess().getDefKeyword_1());
    }
(
(
		lv_excluding_5_0=	'excluding' 
    {
        newLeafNode(lv_excluding_5_0, grammarAccess.getProjectionAccess().getExcludingExcludingKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProjectionRule());
	        }
       		setWithLastConsumed($current, "excluding", true, "excluding");
	    }

)
)?	otherlv_6='projection' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getProjectionAccess().getProjectionKeyword_3());
    }
(
(
		lv_name_7_0=RULE_ID
		{
			newLeafNode(lv_name_7_0, grammarAccess.getProjectionAccess().getNameIDTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProjectionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_7_0, 
        		"ID");
	    }

)
)	otherlv_8='of' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getProjectionAccess().getOfKeyword_5());
    }
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getProjectionAccess().getEntityEntityParserRuleCall_6_0_0()); 
	    }
		lv_entity_9_1=ruleEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProjectionRule());
	        }
       		set(
       			$current, 
       			"entity",
        		lv_entity_9_1, 
        		"Entity");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getProjectionAccess().getEntityQualifiedNameParserRuleCall_6_0_1()); 
	    }
		lv_entity_9_2=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProjectionRule());
	        }
       		set(
       			$current, 
       			"entity",
        		lv_entity_9_2, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getProjectionAccess().getAttributesAttributeParserRuleCall_7_0()); 
	    }
		lv_attributes_10_0=ruleAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProjectionRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_10_0, 
        		"Attribute");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_11='end' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getProjectionAccess().getEndKeyword_8());
    }
)
;





// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	 iv_ruleQualifiedName=ruleQualifiedName 
	 { $current=$iv_ruleQualifiedName.current; } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getQualifiedNameAccess().getIDAction_0(),
            $current);
    }
)this_ID_1=RULE_ID
    { 
    newLeafNode(this_ID_1, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1()); 
    }
(((	'.' 
)=>	otherlv_2='.' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_2_0());
    }
)this_ID_3=RULE_ID
    { 
    newLeafNode(this_ID_3, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_2_1()); 
    }
)*)
;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


